#!/usr/bin/python3

import os
import sys
from datetime import datetime
from pyngrok import ngrok

"""
    Author:  Nick Donfris
    Purpose: Simple python file to write ngrok url in URL.tsx file
    (ngrok w/o account requires restartng every 2 hours). Also starts 
    typescript server located at ts-movie-list/backend/source/server.ts
    by envoking nodemon.
"""


# fixes inconsistent formatting of datetime strings
# to show when the server will end
now = datetime.now()
curr_hour = str(now.hour)
curr_minute = str(now.minute)
if now.minute < 10:
    curr_min = "0" + str(now.minute)
started = str(now.hour) + ":" + curr_minute
if now.hour == 22:
    end_hour = "00"
elif now.hour == 23:
    end_hour = "01"
else:
    end_hour = str(now.hour+2)
will_end = end_hour + ":" + curr_minute


# Start ngrok
# <NgrokTunnel: "http://<public_sub>.ngrok.io" -> "http://localhost:80">
ngrok_tunnel = ngrok.connect(3000)
ngrok_str = str(ngrok_tunnel)
ngrok_str = ngrok_str.replace("NgrokTunnel: ", "")
ngrok_str = ngrok_str.replace(' -> "http://localhost:3000"', "")

# edit the directory so nodemon command run's correctly
file_path = os.getcwd().split('/')
if ('ts-movie-list' not in file_path):
    print("Error: you are not in a directory containing the server")
    sys.exit(1)

for directory in file_path[::-1]:
    if (directory != 'ts-movie-list'):
        os.chdir('../')
    if (directory == 'ts-movie-list'):
        break

with open("./frontend/helpers/URL.tsx", 'w', encoding="utf-8") as server_file:
    server_file.truncate(0)
    server_file.write("/*\n *\n")
    server_file.write(" * Server started at:     " + started + "\n")
    server_file.write(" * Server will end at:    " + will_end + "\n *\n")
    server_file.write(" */\n\n\n")
    server_file.write("const serverURL = " + ngrok_str + ";\n")
    server_file.write("\nexport default serverURL;")

# store ngrok process, allowing script to be ended by ctrl+c
ngrok_process = ngrok.get_ngrok_process()
try:
    print(" Server is running...")
    print(" Server will end at: " + will_end)
    os.system('nodemon ./backend/source/server.ts')
    ngrok_process.proc.wait()

except KeyboardInterrupt:
    print(" Shutting down server.")
    ngrok.kill()
